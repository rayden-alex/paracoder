import java.text.SimpleDateFormat

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
//	id 'org.graalvm.buildtools.native' version '0.9.28'
}

group = 'by.rayden'
version = '1.0.2'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

	all {
		exclude group: 'io.micrometer'
	}
}


repositories {
	mavenCentral()
}

dependencies {
	//to get rid of "unknown enum constant javax.annotation.meta.When.MAYBE" warning
    //compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
	compileOnly 'com.github.spotbugs:spotbugs-annotations:4.8.0'

	implementation 'net.java.dev.jna:jna:5.13.0'

	implementation 'info.picocli:picocli-spring-boot-starter:4.7.5'
	implementation 'info.picocli:picocli-jansi-graalvm:1.2.0'
	implementation 'commons-io:commons-io:2.11.0'
//	implementation 'net.java.dev.jna:jna-platform:5.13.0'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'info.picocli:picocli-codegen:4.7.5'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.withType(JavaCompile).configureEach {
	options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

//Enable JDK21 preview features, see https://docs.gradle.org/current/userguide/building_java_projects.html#sec:feature_preview
tasks.withType(JavaCompile).configureEach {
	options.compilerArgs += "--enable-preview"
}

tasks.withType(Test).configureEach {
	jvmArgs += "--enable-preview"
}

tasks.withType(JavaExec).configureEach {
	jvmArgs += "--enable-preview"
}

def generatedResources = "$buildDir/generated-resources/main"
sourceSets {
	main {
		//Register an output folder on the main SourceSet:
		output.dir(generatedResources, builtBy: 'generateVersionTxt')
		//It is now a part of the 'main' classpath and will be a part of the jar
	}
}

//A task that generates the "version.txt" resources:
tasks.register('generateVersionTxt') {
	description 'Creates a version.txt file with build info that is added to the root of the jar'
	doLast {
		new File(generatedResources).mkdirs()
		def generated = new File(generatedResources, "version.txt")
		generated.text = """
Version: $rootProject.version
Buildtime: ${new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date())}
Application-name: $rootProject.name
"""
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
